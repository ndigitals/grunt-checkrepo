# Specify which distribution to on.
dist: xenial

# Tell Travis CI which language to use.
language: node_js

# Tell Travis CI which notifications to send.
notifications:
  email:
    on_success: never
    on_failure: change

# Whitelist branches for the "push" build check.
branches:
  only:
    - master
    - /^dev\-release\/.*$/
    - /^feature\/.*$/
    - /^fix\/.*$/

node_js:
  - "node"
  - "11"
  - "10"
  - "8"

before_install:
  - npm install -g grunt-cli

before_script:
  # Create and stage a test file.
  - grunt --version > test.txt && git add test.txt

script:
  # Perform linting
  - grunt jshint
  # Perform testing
  - grunt test

after_script:
  # Clean up test files.
  - git reset HEAD test.txt && rm -f test.txt

jobs:
  include:
    - # require the branch name to be master (note for PRs this is the base branch name)
      if: branch = master
    - stage: deploy
      name: "NPM Deployment"
      node_js: "node"
      before_install: skip
      before_script: skip
      script: skip
      after_script: skip
      deploy:
        provider: npm
        email: "tim.nolte@ndigitals.com"
        api_key: $NPM_API_KEY
        gem: grunt-checkrepo
        on:
          branch: master
    - stage: release
      name: "GitHub Release"
      node_js: "node"
      before_install: skip
      before_script: skip
      script: skip
      after_script: skip
      before_deploy:
        # Set up git user name and tag this commit
        - git config --local user.name "Tim Nolte"
        - git config --local user.email "tim.nolte@ndigitals.com"
        - export LAST_GIT_TAG_VERSION=$(git describe --abbrev=0 --tags) && export LAST_GIT_TAG_VERSION=${LAST_GIT_TAG_VERSION:1}
        - export GIT_TAG_VERSION=$((LAST_GIT_TAG_VERSION+1))
        - git tag $GIT_TAG_VERSION
      deploy:
        condition: -z $(git tag --points-at $TRAVIS_COMMIT)
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        skip_cleanup: true
        on:
          branch: master
